<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd">

	<!-- - The controllers are autodetected POJOs labeled with the @Controller 
		annotation. -->
	<context:component-scan base-package="com.capinfo" />

	<!-- - The BeanNameViewResolver is used to pick up the visits view name 
		(below). - It has the order property set to 2, which means that this will 
		- be the first view resolver to be used after the delegating content - negotiating 
		view resolver. -->
	<bean id="beanNameViewResolver"
		class="org.springframework.web.servlet.view.BeanNameViewResolver">
		<property name="order" value="1" />
	</bean>
	<!-- - This bean configures the 'prefix' and 'suffix' properties of - InternalResourceViewResolver, 
		which resolves logical view names - returned by Controllers. For example, 
		a logical view name of "vets" - will be mapped to "/WEB-INF/jsp/vets.jsp". -->
		
	<bean id="internalResourceViewResolver"
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="viewClass"
			value="org.springframework.web.servlet.view.JstlView" />
		<property name="prefix" value="/WEB-INF/views/" />
		<property name="order" value="2" />
		<property name="suffix" value=".jsp" />
	</bean>


	<!-- UTF8 -->
	<bean class="com.capinfo.framework.web.binder.UTF8StringBeanPostProcessor" />

	<bean id="conversionService"
		class="org.springframework.format.support.FormattingConversionServiceFactoryBean">
		<property name="converters">
			<list>
				<bean class="com.capinfo.framework.web.binder.CustomerConverter" />
			</list>
		</property>
	</bean>

	<!-- spring 3.1 new -->
	<mvc:annotation-driven conversion-service="conversionService" />


	<!-- spring文件上传 -->
	<bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<property name="defaultEncoding" value="UTF-8" />
		<property name="maxUploadSize" value="209715200" /><!-- 200MB -->
	</bean>


</beans>